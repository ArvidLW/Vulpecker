--- nsSVGCairoSurface.cpp	4 Jun 2005 07:03:29 -0000	1.2
+++ nsSVGCairoSurface.cpp	5 Jan 2006 19:38:08 -0000
@@ -33,16 +33,17 @@
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
 #include "nsISupports.h"
 #include "nsCOMPtr.h"
 #include "nsSVGCairoSurface.h"
 #include "nsISVGCairoSurface.h"
+#include "prmem.h"
 #include <cairo.h>
 
 /**
  * \addtogroup cairo_renderer Cairo Rendering Engine
  * @{
  */
 //////////////////////////////////////////////////////////////////////
 /**
@@ -82,28 +83,54 @@ nsSVGCairoSurface::nsSVGCairoSurface() :
 
 nsSVGCairoSurface::~nsSVGCairoSurface()
 {
   if (mSurface) {
     cairo_surface_destroy(mSurface);
     mSurface = nsnull;
   }
   if (mData) {
-    delete [] mData;
+    PR_Free(mData);
     mData = nsnull;
   }
 }
 
+static PRBool
+CheckSaneImageSize(PRUint32 width, PRUint32 height)
+{
+    if (width <= 0 || height <= 0)
+        return PR_FALSE;
+
+    /* check to make sure we don't overflow a 32-bit */
+    PRUint32 tmp = width * height;
+    if (tmp / height != width)
+        return PR_FALSE;
+
+    tmp = tmp * 4;
+    if (tmp / 4 != width * height)
+        return PR_FALSE;
+
+    /* reject over-wide or over-tall images */
+    const PRUint32 k64KLimit = 0x0000FFFF;
+    if (width > k64KLimit || height > k64KLimit)
+        return PR_FALSE;
+
+    return PR_TRUE;
+}
+
 nsresult
 nsSVGCairoSurface::Init(PRUint32 width, PRUint32 height)
 {
   mWidth = width;
   mHeight = height;
 
-  mData = new PRUint8[4*width*height];
+  if (!CheckSaneImageSize(width, height))
+    return NS_ERROR_FAILURE;
+
+  mData = (PRUint8 *)PR_Malloc(4*width*height);
 
   if (!mData)
     return NS_ERROR_OUT_OF_MEMORY;
 
   memset(mData, 0, 4*width*height);
   mSurface = cairo_image_surface_create_for_data(mData, CAIRO_FORMAT_ARGB32,
                                                  mWidth, mHeight, 4*mWidth);
   if (!mSurface)
