--- content/html/content/src/nsHTMLLabelElement.cpp	3 Oct 2007 08:05:16 -0000	1.87.6.2
+++ content/html/content/src/nsHTMLLabelElement.cpp	29 Nov 2007 13:07:38 -0000
@@ -237,18 +237,21 @@ nsHTMLLabelElement::HandleDOMEvent(nsPre
 
   nsCOMPtr<nsIContent> content = GetForContent();
   if (content && !EventTargetIn(aPresContext, aEvent, content, this)) {
     mHandlingEvent = PR_TRUE;
     switch (aEvent->message) {
       case NS_MOUSE_LEFT_CLICK:
         if (aEvent->eventStructType == NS_MOUSE_EVENT) {
           if (ShouldFocus(this)) {
+            PRBool oldFocusCalled = mFocusCalled;
+            mFocusCalled = PR_TRUE;
             // Focus the for content.
-            content->SetFocus(aPresContext);
+            SetFocus(aPresContext);
+            mFocusCalled = oldFocusCalled;
           }
 
           // Dispatch a new click event to |content|
           //    (For compatibility with IE, we do only left click.  If
           //    we wanted to interpret the HTML spec very narrowly, we
           //    would do nothing.  If we wanted to do something
           //    sensible, we might send more events through like
           //    this.)  See bug 7554, bug 49897, and bug 96813.
@@ -294,20 +297,23 @@ nsHTMLLabelElement::SetFocus(nsPresConte
   // Since we don't have '-moz-user-focus: normal', the only time
   // |SetFocus| will be called is when the accesskey is activated.
   nsCOMPtr<nsIContent> content = GetForContent();
   if (content) {
     if (mFocusCalled) {
       // Handle input element in a special way, so that focusing
       // <input type="file"> doesn't focus the input field but the
       // 'browse...' button.
-      nsCOMPtr<nsIDOMHTMLInputElement> input = do_QueryInterface(content);
-      if (input) {
-        input->Focus();
-        return;
+      nsCOMPtr<nsIFormControl> control = do_QueryInterface(content);
+      if (control && control->GetType() == NS_FORM_INPUT_FILE) {
+        nsCOMPtr<nsIDOMHTMLInputElement> input = do_QueryInterface(content);
+        if (input) {
+          input->Focus();
+          return;
+        }
       }
     }
     content->SetFocus(aContext);
   }
 }
 
 nsresult
 nsHTMLLabelElement::Reset()