--- content/html/content/src/nsHTMLInputElement.cpp	29 Mar 2007 21:36:15 -0000	1.390.2.17
+++ content/html/content/src/nsHTMLInputElement.cpp	6 Apr 2007 16:37:05 -0000
@@ -120,16 +120,17 @@ static NS_DEFINE_CID(kXULControllersCID,
 #define BF_VALUE_CHANGED 2
 #define BF_CHECKED_CHANGED 3
 #define BF_CHECKED 4
 #define BF_HANDLING_SELECT_EVENT 5
 #define BF_SHOULD_INIT_CHECKED 6
 #define BF_PARSER_CREATING 7
 #define BF_IN_INTERNAL_ACTIVATE 8
 #define BF_CHECKED_IS_TOGGLED 9
+#define BF_SETTING_FILE_FOCUS 10
 
 #define GET_BOOLBIT(bitfield, field) (((bitfield) & (0x01 << (field))) \
                                         ? PR_TRUE : PR_FALSE)
 #define SET_BOOLBIT(bitfield, field, b) ((b) \
                                         ? ((bitfield) |=  (0x01 << (field))) \
                                         : ((bitfield) &= ~(0x01 << (field))))
 
 static const char* kWhitespace = "\n\r\t\b";
@@ -1147,18 +1148,22 @@ nsHTMLInputElement::Blur()
   }
 
   return NS_OK;
 }
 
 NS_IMETHODIMP
 nsHTMLInputElement::Focus()
 {
-  if (ShouldFocus(this)) {
+  if (ShouldFocus(this) && !GET_BOOLBIT(mBitField, BF_SETTING_FILE_FOCUS)) {
+    if (mType == NS_FORM_INPUT_FILE) {
+      SET_BOOLBIT(mBitField, BF_SETTING_FILE_FOCUS, PR_TRUE);
+    }
     SetElementFocus(PR_TRUE);
+    SET_BOOLBIT(mBitField, BF_SETTING_FILE_FOCUS, PR_FALSE);
   }
 
   return NS_OK;
 }
 
 void
 nsHTMLInputElement::SetFocus(nsPresContext* aPresContext)
 {
@@ -1197,16 +1202,34 @@ nsHTMLInputElement::SetFocus(nsPresConte
   }
 
   aPresContext->EventStateManager()->SetContentState(this,
                                                      NS_EVENT_STATE_FOCUS);
 
   nsIFormControlFrame* formControlFrame = GetFormControlFrame(PR_TRUE);
 
   if (formControlFrame) {
+    if (mType == NS_FORM_INPUT_FILE &&
+        GET_BOOLBIT(mBitField, BF_SETTING_FILE_FOCUS)) {
+      nsIFrame* frame = nsnull;
+      CallQueryInterface(formControlFrame, &frame);
+      if (frame) {
+        for (frame = frame->GetFirstChild(nsnull);
+             frame;
+             frame = frame->GetNextSibling()) {
+          nsCOMPtr<nsIFormControl> control = do_QueryInterface(frame->GetContent());
+          if (control && control->GetType() == NS_FORM_INPUT_BUTTON) {
+            frame->GetContent()->SetFocus(aPresContext);
+            return;
+          }
+        }
+      }
+      NS_WARNING("Could not focus file input!");
+      return;
+    }
     formControlFrame->SetFocus(PR_TRUE, PR_TRUE);
     formControlFrame->ScrollIntoView(aPresContext);
     // Could call SelectAll(aPresContext) here to automatically
     // select text when we receive focus - only for text and password!
   }
 }
 
 NS_IMETHODIMP
