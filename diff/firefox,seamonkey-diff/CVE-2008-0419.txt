--- docshell/base/nsDocShellEditorData.h	23 Feb 2005 21:27:19 -0000	1.6
+++ docshell/base/nsDocShellEditorData.h	24 Nov 2007 00:06:02 -0000
@@ -61,17 +61,17 @@
 class nsDocShellEditorData
 {
 public:
 
               nsDocShellEditorData(nsIDocShell* inOwningDocShell);
               ~nsDocShellEditorData();
               
 
-              // set a flag to say this frame should be editable when the next url loads
+  // set a flag to say this frame should be editable when the next url loads
   nsresult    MakeEditable(PRBool inWaitForUriLoad);
   
   PRBool      GetEditable();
   
               // actually create the editor for this docShell
   nsresult    CreateEditor();
   
               // get the editing session. The editing session always lives on the content
@@ -79,16 +79,19 @@ public:
   nsresult    GetEditingSession(nsIEditingSession **outEditingSession);
   
               // get the editor for this docShell. May return null but NS_OK
   nsresult    GetEditor(nsIEditor **outEditor);
   
               // set the editor on this docShell
   nsresult    SetEditor(nsIEditor *inEditor);
 
+  // Tear down the editor on this docshell, if any.
+  void        TearDownEditor();
+
 protected:              
 
   nsresult    EnsureEditingSession();
 
 protected:
 
   nsIDocShell*                mDocShell;        // the doc shell that owns us. Weak ref, since it always outlives us.  
   

--- docshell/base/nsDocShellEditorData.cpp	12 Nov 2007 14:47:03 -0000	1.13
+++ docshell/base/nsDocShellEditorData.cpp	24 Nov 2007 00:20:32 -0000
@@ -63,16 +63,22 @@ nsDocShellEditorData::nsDocShellEditorDa
 
 /*---------------------------------------------------------------------------
 
   ~nsDocShellEditorData
 
 ----------------------------------------------------------------------------*/
 nsDocShellEditorData::~nsDocShellEditorData()
 {
+  TearDownEditor();
+}
+
+void
+nsDocShellEditorData::TearDownEditor()
+{
   if (mEditingSession)
   {
     nsCOMPtr<nsIDOMWindow> domWindow = do_GetInterface(mDocShell);
     // This will eventually call nsDocShellEditorData::SetEditor(nsnull)
     //   which will call mEditorPreDestroy() and delete the editor
     mEditingSession->TearDownEditorOnWindow(domWindow);
   }
   else if (mEditor) // Should never have this w/o nsEditingSession!

--- docshell/base/nsDocShell.cpp	21 Nov 2007 19:59:42 -0000	1.869
+++ docshell/base/nsDocShell.cpp	24 Nov 2007 00:26:21 -0000
@@ -997,16 +997,22 @@ nsDocShell::FirePageHideNotification(PRB
         n = kids.Length();
         for (i = 0; i < n; ++i) {
             if (kids[i]) {
                 kids[i]->FirePageHideNotification(aIsUnload);
             }
         }
     }
 
+    // Now make sure our editor, if any, is torn down before we go
+    // any farther.
+    if (mEditorData) {
+        mEditorData->TearDownEditor();
+    }
+
     return NS_OK;
 }
 
 //
 // Bug 13871: Prevent frameset spoofing
 //
 // This routine answers: 'Is origin's document from same domain as
 // target's document?'
