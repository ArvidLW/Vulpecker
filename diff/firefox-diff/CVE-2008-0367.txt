--- embedding/components/windowwatcher/src/nsPrompt.cpp	3 Dec 2007 21:47:45 -0000	1.33
+++ embedding/components/windowwatcher/src/nsPrompt.cpp	28 Jan 2008 23:46:36 -0000
@@ -50,16 +50,19 @@
 #include "nsNetCID.h"
 #include "nsPIDOMWindow.h"
 #include "nsIPromptFactory.h"
 #include "nsIProxiedChannel.h"
 #include "nsIProxyInfo.h"
 #include "nsIIDNService.h"
 #include "nsNetUtil.h"
 #include "nsPromptUtils.h"
+#include "nsIPrefService.h"
+#include "nsIPrefLocalizedString.h"
+
 
 nsresult
 NS_NewPrompter(nsIPrompt **result, nsIDOMWindow *aParent)
 {
   nsresult rv;
   *result = 0;
 
   nsPrompt *prompter = new nsPrompt(aParent);
@@ -413,25 +416,45 @@ MakeDialogText(nsIChannel* aChannel, nsI
   aAuthInfo->GetUsername(username);
 
   PRUint32 flags;
   aAuthInfo->GetFlags(&flags);
   PRBool proxyAuth = (flags & nsIAuthInformation::AUTH_PROXY) != 0;
 
   nsAutoString realm;
   aAuthInfo->GetRealm(realm);
+  // Trim obnoxiously long realms.
+  if (realm.Length() > 150) {
+    realm.Truncate(150);
+
+    // Append "..." (or localized equivalent). Yay complexity.
+    nsAutoString ellipsis;
+    nsCOMPtr<nsIPrefBranch> prefs(do_GetService(NS_PREFSERVICE_CONTRACTID));
+    if (prefs) {
+      nsCOMPtr<nsIPrefLocalizedString> prefString;
+      rv = prefs->GetComplexValue("intl.ellipsis",
+                                  NS_GET_IID(nsIPrefLocalizedString),
+                                  getter_AddRefs(prefString));
+      if (prefString)
+        prefString->ToString(getter_Copies(ellipsis));
+    }
+    if (ellipsis.IsEmpty())
+      ellipsis.AssignLiteral("...");
+
+    realm.Append(ellipsis);
+  }
 
   // Append the port if it was specified
   if (port != -1) {
     displayHost.Append(PRUnichar(':'));
     displayHost.AppendInt(port);
   }
 
-  NS_NAMED_LITERAL_STRING(proxyText, "EnterUserPasswordForProxy");
-  NS_NAMED_LITERAL_STRING(originText, "EnterUserPasswordForRealm");
+  NS_NAMED_LITERAL_STRING(proxyText, "EnterLoginForProxy");
+  NS_NAMED_LITERAL_STRING(originText, "EnterLoginForRealm");
   NS_NAMED_LITERAL_STRING(noRealmText, "EnterUserPasswordFor");
   NS_NAMED_LITERAL_STRING(passwordText, "EnterPasswordFor");
 
   const PRUnichar *text;
   if (proxyAuth) {
     text = proxyText.get();
   } else {
     text = originText.get();
