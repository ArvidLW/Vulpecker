diff --git a/layout/xul/base/src/tree/src/nsTreeColumns.cpp b/layout/xul/base/src/tree/src/nsTreeColumns.cpp
--- a/layout/xul/base/src/tree/src/nsTreeColumns.cpp
+++ b/layout/xul/base/src/tree/src/nsTreeColumns.cpp
@@ -380,20 +380,17 @@ nsTreeColumn::Invalidate()
 nsTreeColumns::nsTreeColumns(nsITreeBoxObject* aTree)
   : mTree(aTree),
     mFirstColumn(nsnull)
 {
 }
 
 nsTreeColumns::~nsTreeColumns()
 {
-  for (nsTreeColumn* currCol = mFirstColumn; currCol; currCol = currCol->GetNext()) {
-    currCol->SetColumns(nsnull);
-  }
-  NS_IF_RELEASE(mFirstColumn);
+  nsTreeColumns::InvalidateColumns();
 }
 
 // QueryInterface implementation for nsTreeColumns
 NS_INTERFACE_MAP_BEGIN(nsTreeColumns)
   NS_INTERFACE_MAP_ENTRY(nsITreeColumns)
   NS_INTERFACE_MAP_ENTRY(nsISupports)
   NS_DOM_INTERFACE_MAP_ENTRY_CLASSINFO(TreeColumns)
 NS_INTERFACE_MAP_END
@@ -570,16 +567,20 @@ nsTreeColumns::GetColumnAt(PRInt32 aInde
 {
   NS_IF_ADDREF(*_retval = GetColumnAt(aIndex));
   return NS_OK;
 }
 
 NS_IMETHODIMP
 nsTreeColumns::InvalidateColumns()
 {
+  for (nsTreeColumn* currCol = mFirstColumn; currCol;
+       currCol = currCol->GetNext()) {
+    currCol->SetColumns(nsnull);
+  }
   NS_IF_RELEASE(mFirstColumn);
   return NS_OK;
 }
 
 NS_IMETHODIMP
 nsTreeColumns::RestoreNaturalOrder()
 {
   if (!mTree)
@@ -599,17 +600,17 @@ nsTreeColumns::RestoreNaturalOrder()
   PRUint32 numChildren = colsContent->GetChildCount();
   for (PRUint32 i = 0; i < numChildren; ++i) {
     nsIContent *child = colsContent->GetChildAt(i);
     nsAutoString ordinal;
     ordinal.AppendInt(i);
     child->SetAttr(kNameSpaceID_None, nsGkAtoms::ordinal, ordinal, PR_TRUE);
   }
 
-  NS_IF_RELEASE(mFirstColumn);
+  nsTreeColumns::InvalidateColumns();
 
   mTree->Invalidate();
 
   return NS_OK;
 }
 
 nsTreeColumn*
 nsTreeColumns::GetPrimaryColumn()
diff --git a/layout/xul/base/src/tree/src/nsTreeColumns.h b/layout/xul/base/src/tree/src/nsTreeColumns.h
--- a/layout/xul/base/src/tree/src/nsTreeColumns.h
+++ b/layout/xul/base/src/tree/src/nsTreeColumns.h
@@ -102,17 +102,20 @@ protected:
 
   PRInt16 GetType() { return mType; }
 
   PRInt8 GetCropStyle() { return mCropStyle; }
   PRInt32 GetTextAlignment() { return mTextAlignment; }
 
   nsTreeColumn* GetNext() { return mNext; }
   nsTreeColumn* GetPrevious() { return mPrevious; }
-  void SetNext(nsTreeColumn* aNext) { NS_IF_ADDREF(mNext = aNext); }
+  void SetNext(nsTreeColumn* aNext) {
+    NS_ASSERTION(!mNext, "already have a next sibling");
+    NS_IF_ADDREF(mNext = aNext);
+  }
   void SetPrevious(nsTreeColumn* aPrevious) { mPrevious = aPrevious; }
 
 private:
   /**
    * Non-null nsIContent for the associated <treecol> element.
    */
   nsCOMPtr<nsIContent> mContent;
 
