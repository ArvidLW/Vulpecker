diff --git a/content/base/src/nsContentUtils.cpp b/content/base/src/nsContentUtils.cpp
--- a/content/base/src/nsContentUtils.cpp
+++ b/content/base/src/nsContentUtils.cpp
@@ -5022,16 +5022,18 @@ nsContentUtils::CanAccessNativeAnon()
       // No code at all is running. So we must be arriving here as the result
       // of C++ code asking us to do something. Allow access.
       return PR_TRUE;
     }
 
     // Some code is running, we can't make the assumption, as above, but we
     // can't use a native frame, so clear fp.
     fp = nsnull;
+  } else if (!fp->script) {
+    fp = nsnull;
   }
 
   void *annotation = fp ? JS_GetFrameAnnotation(cx, fp) : nsnull;
   PRBool privileged;
   if (NS_SUCCEEDED(principal->IsCapabilityEnabled("UniversalXPConnect",
                                                   annotation,
                                                   &privileged)) &&
       privileged) {
diff --git a/js/src/xpconnect/src/XPCSystemOnlyWrapper.cpp b/js/src/xpconnect/src/XPCSystemOnlyWrapper.cpp
--- a/js/src/xpconnect/src/XPCSystemOnlyWrapper.cpp
+++ b/js/src/xpconnect/src/XPCSystemOnlyWrapper.cpp
@@ -180,16 +180,18 @@ AllowedToAct(JSContext *cx, jsval idval)
       // No code at all is running. So we must be arriving here as the result
       // of C++ code asking us to do something. Allow access.
       return JS_TRUE;
     }
 
     // Some code is running, we can't make the assumption, as above, but we
     // can't use a native frame, so clear fp.
     fp = nsnull;
+  } else if (!fp->script) {
+    fp = nsnull;
   }
 
   void *annotation = fp ? JS_GetFrameAnnotation(cx, fp) : nsnull;
   PRBool privileged;
   if (NS_SUCCEEDED(principal->IsCapabilityEnabled("UniversalXPConnect",
                                                   annotation,
                                                   &privileged)) &&
       privileged) {
