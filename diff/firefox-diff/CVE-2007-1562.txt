diff --git a/netwerk/protocol/ftp/src/nsFtpConnectionThread.cpp b/netwerk/protocol/ftp/src/nsFtpConnectionThread.cpp
index 3c2718e..246aa0b 100644
--- a/netwerk/protocol/ftp/src/nsFtpConnectionThread.cpp
+++ b/netwerk/protocol/ftp/src/nsFtpConnectionThread.cpp
@@ -1288,15 +1288,20 @@ nsFtpState::R_pasv() {
     PRInt32 port;
 
     nsCAutoString responseCopy(mResponseMsg);
     char *response = responseCopy.BeginWriting();
 
     char *ptr = response;
 
+    // Make sure to ignore the address in the PASV response (bug 370559)
     nsCAutoString host;
+    rv = mChannel->URI()->GetAsciiHost(host);
+    if (NS_FAILED(rv))
+        return FTP_ERROR;
+
     if (mIPv6ServerAddress) {
         // The returned string is of the form
         // text (|||ppp|)
         // Where '|' can be any single character
         char delim;
         while (*ptr && *ptr != '(')
             ptr++;
@@ -1347,21 +1352,14 @@ nsFtpState::R_pasv() {
         }
 
         NS_ASSERTION(fields == 6, "Can't parse PASV response");
         if (fields < 6)
             return FTP_ERROR;
 
         port = ((PRInt32) (p0<<8)) + p1;
-        host.AppendInt(h0);
-        host.Append('.');
-        host.AppendInt(h1);
-        host.Append('.');
-        host.AppendInt(h2);
-        host.Append('.');
-        host.AppendInt(h3);
     }
 
     const char* hostStr =
             mIPv6ServerAddress ? mIPv6ServerAddress : host.get();
 
     PRBool newDataConn = PR_TRUE;
     if (mDataTransport) {
