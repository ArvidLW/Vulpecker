diff --git a/parser/htmlparser/src/nsExpatDriver.cpp b/parser/htmlparser/src/nsExpatDriver.cpp
--- a/parser/htmlparser/src/nsExpatDriver.cpp
+++ b/parser/htmlparser/src/nsExpatDriver.cpp
@@ -391,15 +391,19 @@ NS_IMPL_CYCLE_COLLECTING_ADDREF(nsExpatD
 NS_IMPL_CYCLE_COLLECTING_RELEASE(nsExpatDriver)
 
 NS_IMPL_CYCLE_COLLECTION_2(nsExpatDriver, mSink, mExtendedSink)
 
+// We store the tagdepth in a PRUint8, so make sure the limit fits in a PRUint8.
+PR_STATIC_ASSERT(MAX_REFLOW_DEPTH <= PR_UINT8_MAX);
+
 nsExpatDriver::nsExpatDriver()
   : mExpatParser(nsnull),
     mInCData(PR_FALSE),
     mInInternalSubset(PR_FALSE),
     mInExternalDTD(PR_FALSE),
     mMadeFinalCallToExpat(PR_FALSE),
     mIsFinalChunk(PR_FALSE),
+    mTagDepth(0),
     mInternalState(NS_OK),
     mExpatBuffered(0),
     mCatalogData(nsnull)
 {
@@ -411,9 +415,9 @@ nsExpatDriver::~nsExpatDriver()
     XML_ParserFree(mExpatParser);
   }
 }
 
-nsresult
+void
 nsExpatDriver::HandleStartElement(const PRUnichar *aValue,
                                   const PRUnichar **aAtts)
 {
   NS_ASSERTION(mSink, "content sink not found!");
@@ -429,16 +433,19 @@ nsExpatDriver::HandleStartElement(const 
     // Just looping till we find out what the length is
   }
 
   if (mSink) {
+    if (++mTagDepth == MAX_REFLOW_DEPTH) {
+      MaybeStopParser(NS_ERROR_HTMLPARSER_HIERARCHYTOODEEP);
+      return;
+    }
+
     nsresult rv = mSink->
       HandleStartElement(aValue, aAtts, attrArrayLength,
                          XML_GetIdAttributeIndex(mExpatParser),
                          XML_GetCurrentLineNumber(mExpatParser));
     MaybeStopParser(rv);
   }
-
-  return NS_OK;
 }
 
 nsresult
 nsExpatDriver::HandleEndElement(const PRUnichar *aValue)
@@ -448,8 +455,9 @@ nsExpatDriver::HandleEndElement(const PR
                "Shouldn't block from HandleStartElement.");
 
   if (mSink && mInternalState != NS_ERROR_HTMLPARSER_STOPPARSING) {
     nsresult rv = mSink->HandleEndElement(aValue);
+    --mTagDepth;
     MaybeStopParser(rv);
   }
 
   return NS_OK;
diff --git a/parser/htmlparser/src/nsExpatDriver.h b/parser/htmlparser/src/nsExpatDriver.h
--- a/parser/htmlparser/src/nsExpatDriver.h
+++ b/parser/htmlparser/src/nsExpatDriver.h
@@ -67,9 +67,9 @@ public:
   int HandleExternalEntityRef(const PRUnichar *aOpenEntityNames,
                               const PRUnichar *aBase,
                               const PRUnichar *aSystemId,
                               const PRUnichar *aPublicId);
-  nsresult HandleStartElement(const PRUnichar *aName, const PRUnichar **aAtts);
+  void HandleStartElement(const PRUnichar *aName, const PRUnichar **aAtts);
   nsresult HandleEndElement(const PRUnichar *aName);
   nsresult HandleCharacterData(const PRUnichar *aCData, const PRUint32 aLength);
   nsresult HandleComment(const PRUnichar *aName);
   nsresult HandleProcessingInstruction(const PRUnichar *aTarget,
@@ -150,8 +150,10 @@ private:
   // Whether we're sure that we won't be getting more buffers to parse from
   // Necko
   PRPackedBool     mIsFinalChunk;
 
+  PRUint8          mTagDepth;
+
   nsresult         mInternalState;
 
   // The length of the data in Expat's buffer (in number of PRUnichars).
   PRUint32         mExpatBuffered;
