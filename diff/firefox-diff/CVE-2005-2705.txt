--- jsstr.c	3 Aug 2005 17:56:43 -0000	3.107
+++ jsstr.c	3 Aug 2005 22:28:25 -0000
@@ -354,20 +354,28 @@ js_str_escape(JSContext *cx, JSObject *o
     for (i = 0; i < length; i++) {
         if ((ch = chars[i]) < 128 && IS_OK(ch, mask))
             continue;
         if (ch < 256) {
             if (mask == URL_XPALPHAS && ch == ' ')
                 continue;   /* The character will be encoded as '+' */
             newlength += 2; /* The character will be encoded as %XX */
         } else {
             newlength += 5; /* The character will be encoded as %uXXXX */
         }
+
+        /* 
+         * Note: this works because newlength can be incremented by at most 5 
+         */
+        if (newlength < length) {
+            JS_ReportOutOfMemory(cx);
+            return JS_FALSE;
+        }
     }
 
     if (newlength >= ~(size_t)0 / sizeof(jschar)) {
         JS_ReportOutOfMemory(cx);
         return JS_FALSE;
     }
 
     newchars = (jschar *) JS_malloc(cx, (newlength + 1) * sizeof(jschar));
     if (!newchars)
         return JS_FALSE;
