diff --git a/js/src/jstracer.cpp b/js/src/jstracer.cpp
--- a/js/src/jstracer.cpp
+++ b/js/src/jstracer.cpp
@@ -12677,19 +12677,24 @@ TraceRecorder::traverseScopeChain(JSObje
     bool foundBlockObj = false;
     JSObject* searchObj = obj;
 
     for (;;) {
         if (searchObj != globalObj) {
             JSClass* cls = STOBJ_GET_CLASS(searchObj);
             if (cls == &js_BlockClass) {
                 foundBlockObj = true;
-            } else if (cls == &js_CallClass &&
-                       JSFUN_HEAVYWEIGHT_TEST(js_GetCallObjectFunction(searchObj)->flags)) {
-                foundCallObj = true;
+            } else if (cls == &js_CallClass) {
+                // If the function that owns this call object is not heavyweight, then
+                // we can't be sure it will always be there, which means the scope chain
+                // does not have a definite length, so abort.
+                if (JSFUN_HEAVYWEIGHT_TEST(js_GetCallObjectFunction(searchObj)->flags))
+                    foundCallObj = true;
+                else
+                    ABORT_TRACE("found call object for non-heavyweight function on scope chain");
             }
         }
 
         if (searchObj == targetObj)
             break;
 
         searchObj = STOBJ_GET_PARENT(searchObj);
         if (!searchObj)
