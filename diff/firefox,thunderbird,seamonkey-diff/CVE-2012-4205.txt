diff --git a/js/xpconnect/src/XPCComponents.cpp b/js/xpconnect/src/XPCComponents.cpp
--- a/js/xpconnect/src/XPCComponents.cpp
+++ b/js/xpconnect/src/XPCComponents.cpp
@@ -28,16 +28,17 @@
 #include "jsfriendapi.h"
 #include "AccessCheck.h"
 #include "mozilla/dom/BindingUtils.h"
 #include "mozilla/Preferences.h"
 #include "nsPrincipal.h"
 #include "mozilla/Attributes.h"
 #include "nsIScriptContext.h"
 #include "nsJSEnvironment.h"
+#include "nsXMLHttpRequest.h"
 
 using namespace mozilla;
 using namespace js;
 using namespace xpc;
 
 using mozilla::dom::DestroyProtoOrIfaceCache;
 
 /***************************************************************************/
@@ -2943,23 +2944,31 @@
 }
 
 static JSBool
 CreateXMLHttpRequest(JSContext *cx, unsigned argc, jsval *vp)
 {
     JSObject *global = JS_GetGlobalForScopeChain(cx);
     MOZ_ASSERT(global);
 
-    nsCOMPtr<nsISupports> inst;
-    nsresult rv;
-    inst = do_CreateInstance("@mozilla.org/xmlextras/xmlhttprequest;1", &rv);
+    JSPrincipals *jsprin = JS_GetCompartmentPrincipals(GetObjectCompartment(global));
+    nsJSPrincipals *nsjsprin = nsJSPrincipals::get(jsprin);
+    MOZ_ASSERT(nsjsprin);
+
+    nsCOMPtr<nsIXMLHttpRequest> xhr = new nsXMLHttpRequest();
+    nsCOMPtr<nsIURI> uri;
+    nsresult rv = nsjsprin->GetURI(getter_AddRefs(uri));
     if (NS_FAILED(rv))
-        return false;
-
-    rv = nsContentUtils::WrapNative(cx, global, inst, vp);
+      return false;
+
+    rv = xhr->Init(nsjsprin, NULL, NULL, uri);
+    if (NS_FAILED(rv))
+      return false;
+
+    rv = nsContentUtils::WrapNative(cx, global, xhr, vp);
     if (NS_FAILED(rv))
         return false;
 
     return true;
 }
 
 static JSBool
 sandbox_enumerate(JSContext *cx, JSHandleObject obj)