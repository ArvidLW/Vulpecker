diff --git a/modules/libpr0n/decoders/jpeg/nsJPEGDecoder.cpp b/modules/libpr0n/decoders/jpeg/nsJPEGDecoder.cpp
--- a/modules/libpr0n/decoders/jpeg/nsJPEGDecoder.cpp
+++ b/modules/libpr0n/decoders/jpeg/nsJPEGDecoder.cpp
@@ -187,22 +187,27 @@ NS_IMETHODIMP nsJPEGDecoder::Init(imgILo
   mImageLoad->GetImage(getter_AddRefs(mImage));
 
   if (!mImage) {
     mImage = do_CreateInstance("@mozilla.org/image/container;1");
     if (!mImage)
       return NS_ERROR_OUT_OF_MEMORY;
       
     mImageLoad->SetImage(mImage);
-    nsresult result = mImage->SetDiscardable("image/jpeg");
-    if (NS_FAILED(result)) {
-      mState = JPEG_ERROR;
-      PR_LOG(gJPEGDecoderAccountingLog, PR_LOG_DEBUG,
-             (" (could not set image container to discardable)"));
-      return result;
+
+    // Don't discard if we're multipart, and assume we are for safety.
+    PRBool multipart = PR_TRUE;
+    if (NS_SUCCEEDED(mImageLoad->GetIsMultiPartChannel(&multipart)) && !multipart) {
+      nsresult result = mImage->SetDiscardable("image/jpeg");
+      if (NS_FAILED(result)) {
+        mState = JPEG_ERROR;
+        PR_LOG(gJPEGDecoderAccountingLog, PR_LOG_DEBUG,
+               (" (could not set image container to discardable)"));
+        return result;
+      }
     }
   }
 
   return NS_OK;
 }
 
 
 /* void close (); */
diff --git a/modules/libpr0n/decoders/png/nsPNGDecoder.cpp b/modules/libpr0n/decoders/png/nsPNGDecoder.cpp
--- a/modules/libpr0n/decoders/png/nsPNGDecoder.cpp
+++ b/modules/libpr0n/decoders/png/nsPNGDecoder.cpp
@@ -301,21 +301,26 @@ NS_IMETHODIMP nsPNGDecoder::Init(imgILoa
    */
   mImageLoad->GetImage(getter_AddRefs(mImage));
   if (!mImage) {
     mImage = do_CreateInstance("@mozilla.org/image/container;1");
     if (!mImage)
       return NS_ERROR_OUT_OF_MEMORY;
       
     mImageLoad->SetImage(mImage);
-    if (NS_FAILED(mImage->SetDiscardable("image/png"))) {
-      PR_LOG(gPNGDecoderAccountingLog, PR_LOG_DEBUG,
-             ("PNGDecoderAccounting: info_callback(): failed to set image container %p as discardable",
-              mImage.get()));
-      return NS_ERROR_FAILURE;
+
+    // Don't discard if we're multipart, and assume we are for safety.
+    PRBool multipart = PR_TRUE;
+    if (NS_SUCCEEDED(mImageLoad->GetIsMultiPartChannel(&multipart)) && !multipart) {
+      if (NS_FAILED(mImage->SetDiscardable("image/png"))) {
+        PR_LOG(gPNGDecoderAccountingLog, PR_LOG_DEBUG,
+               ("PNGDecoderAccounting: info_callback(): failed to set image container %p as discardable",
+                mImage.get()));
+        return NS_ERROR_FAILURE;
+      }
     }
   }
 
   return NS_OK;
 }
 
 /* void close (); */
 NS_IMETHODIMP nsPNGDecoder::Close()
