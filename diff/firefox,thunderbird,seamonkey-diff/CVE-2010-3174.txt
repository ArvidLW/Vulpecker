diff --git a/layout/mathml/nsMathMLTokenFrame.cpp b/layout/mathml/nsMathMLTokenFrame.cpp
--- a/layout/mathml/nsMathMLTokenFrame.cpp
+++ b/layout/mathml/nsMathMLTokenFrame.cpp
@@ -137,17 +137,17 @@ NS_IMETHODIMP
 nsMathMLTokenFrame::SetInitialChildList(nsIAtom*        aListName,
                                         nsFrameList&    aChildList)
 {
   // First, let the base class do its work
   nsresult rv = nsMathMLContainerFrame::SetInitialChildList(aListName, aChildList);
   if (NS_FAILED(rv))
     return rv;
 
-  SetQuotes();
+  SetQuotes(PR_FALSE);
   ProcessTextData();
   return rv;
 }
 
 nsresult
 nsMathMLTokenFrame::Reflow(nsPresContext*          aPresContext,
                            nsHTMLReflowMetrics&     aDesiredSize,
                            const nsHTMLReflowState& aReflowState,
@@ -254,17 +254,17 @@ nsMathMLTokenFrame::MarkIntrinsicWidthsD
 
 NS_IMETHODIMP
 nsMathMLTokenFrame::AttributeChanged(PRInt32         aNameSpaceID,
                                      nsIAtom*        aAttribute,
                                      PRInt32         aModType)
 {
   if (nsGkAtoms::lquote_ == aAttribute ||
       nsGkAtoms::rquote_ == aAttribute) {
-    SetQuotes();
+    SetQuotes(PR_TRUE);
   }
 
   return nsMathMLContainerFrame::
          AttributeChanged(aNameSpaceID, aAttribute, aModType);
 }
 
 void
 nsMathMLTokenFrame::ProcessTextData()
@@ -373,62 +373,49 @@ nsMathMLTokenFrame::SetTextStyle()
 // ms:before { content: open-quote; }
 // ms:after { content: close-quote; }
 // With these two rules, the frame construction code will
 // create inline frames that contain text frames which themselves
 // contain the text content of the quotes.
 // So the main idea in this code is to see if there are lquote and 
 // rquote attributes. If these are there, we ovewrite the default
 // quotes in the text frames.
+// XXX this is somewhat bogus, we probably should map lquote and rquote
+// to 'content' style rules
 //
 // But what if the mathml.css file wasn't loaded? 
 // We also check that we are not relying on null pointers...
 
 static void
-SetQuote(nsIFrame*       aFrame, 
-         nsString&       aValue)
+SetQuote(nsIFrame* aFrame, nsString& aValue, PRBool aNotify)
 {
-  nsIFrame* textFrame;
-  do {
-    // walk down the hierarchy of first children because they could be wrapped
-    textFrame = aFrame->GetFirstChild(nsnull);
-    if (textFrame) {
-      if (textFrame->GetType() == nsGkAtoms::textFrame)
-        break;
-    }
-    aFrame = textFrame;
-  } while (textFrame);
-  if (textFrame) {
-    nsIContent* quoteContent = textFrame->GetContent();
-    if (quoteContent && quoteContent->IsNodeOfType(nsINode::eTEXT)) {
-      quoteContent->SetText(aValue, PR_FALSE); // no notify since we don't want a reflow yet
-    }
-  }
+  if (!aFrame)
+    return;
+
+  nsIFrame* textFrame = aFrame->GetFirstChild(nsnull);
+  if (!textFrame)
+    return;
+
+  nsIContent* quoteContent = textFrame->GetContent();
+  if (!quoteContent->IsNodeOfType(nsINode::eTEXT))
+    return;
+
+  quoteContent->SetText(aValue, aNotify);
 }
 
 void
-nsMathMLTokenFrame::SetQuotes()
+nsMathMLTokenFrame::SetQuotes(PRBool aNotify)
 {
   if (mContent->Tag() != nsGkAtoms::ms_)
     return;
 
-  nsIFrame* rightFrame = nsnull;
-  nsIFrame* baseFrame = nsnull;
-  nsIFrame* leftFrame = mFrames.FirstChild();
-  if (leftFrame)
-    baseFrame = leftFrame->GetNextSibling();
-  if (baseFrame)
-    rightFrame = baseFrame->GetNextSibling();
-  if (!leftFrame || !baseFrame || !rightFrame)
-    return;
-
   nsAutoString value;
   // lquote
   if (GetAttribute(mContent, mPresentationData.mstyle,
                    nsGkAtoms::lquote_, value)) {
-    SetQuote(leftFrame, value);
+    SetQuote(nsLayoutUtils::GetBeforeFrame(this), value, aNotify);
   }
   // rquote
   if (GetAttribute(mContent, mPresentationData.mstyle,
                    nsGkAtoms::rquote_, value)) {
-    SetQuote(rightFrame, value);
+    SetQuote(nsLayoutUtils::GetAfterFrame(this), value, aNotify);
   }
 }
diff --git a/layout/mathml/nsMathMLTokenFrame.h b/layout/mathml/nsMathMLTokenFrame.h
--- a/layout/mathml/nsMathMLTokenFrame.h
+++ b/layout/mathml/nsMathMLTokenFrame.h
@@ -97,12 +97,12 @@ protected:
   // hook to perform MathML-specific actions depending on the tag
   virtual void ProcessTextData();
 
   // helper to set the style of <mi> which has to be italic or normal
   // depending on its textual content
   PRBool SetTextStyle();
 
   // helper to set the quotes of <ms>
-  void SetQuotes();
+  void SetQuotes(PRBool aNotify);
 };
 
 #endif /* nsMathMLTokentFrame_h___ */
