--- jsxml.c	16 Aug 2008 23:36:48 -0000	3.214
+++ jsxml.c	8 Oct 2008 18:45:23 -0000
@@ -1970,52 +1970,54 @@ GetXMLSettingFlags(JSContext *cx, uintN 
     return JS_TRUE;
 }
 
 static JSXML *
 ParseXMLSource(JSContext *cx, JSString *src)
 {
     jsval nsval;
     JSXMLNamespace *ns;
+    JSString *uri;
     size_t urilen, srclen, length, offset, dstlen;
     jschar *chars;
     const jschar *srcp, *endp;
     JSXML *xml;
     JSParseContext pc;
     const char *filename;
     uintN lineno;
     JSStackFrame *fp;
     JSOp op;
     JSParseNode *pn;
     JSXMLArray nsarray;
     uintN flags;
 
-    static const char prefix[] = "<parent xmlns='";
-    static const char middle[] = "'>";
+    static const char prefix[] = "<parent xmlns=\"";
+    static const char middle[] = "\">";
     static const char suffix[] = "</parent>";
 
 #define constrlen(constr)   (sizeof(constr) - 1)
 
     if (!js_GetDefaultXMLNamespace(cx, &nsval))
         return NULL;
     ns = (JSXMLNamespace *) JS_GetPrivate(cx, JSVAL_TO_OBJECT(nsval));
+    uri = js_EscapeAttributeValue(cx, ns->uri, JS_FALSE);
 
-    urilen = JSSTRING_LENGTH(ns->uri);
+    urilen = JSSTRING_LENGTH(uri);
     srclen = JSSTRING_LENGTH(src);
     length = constrlen(prefix) + urilen + constrlen(middle) + srclen +
              constrlen(suffix);
 
     chars = (jschar *) JS_malloc(cx, (length + 1) * sizeof(jschar));
     if (!chars)
         return NULL;
 
     dstlen = length;
     js_InflateStringToBuffer(cx, prefix, constrlen(prefix), chars, &dstlen);
     offset = dstlen;
-    js_strncpy(chars + offset, JSSTRING_CHARS(ns->uri), urilen);
+    js_strncpy(chars + offset, JSSTRING_CHARS(uri), urilen);
     offset += urilen;
     dstlen = length - offset + 1;
     js_InflateStringToBuffer(cx, middle, constrlen(middle), chars + offset,
                              &dstlen);
     offset += dstlen;
     srcp = JSSTRING_CHARS(src);
     js_strncpy(chars + offset, srcp, srclen);
     offset += srclen;
