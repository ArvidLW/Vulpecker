diff --git a/dom/xbl/nsXBLBinding.cpp b/dom/xbl/nsXBLBinding.cpp
index 16a4b50..e123702 100644
--- a/dom/xbl/nsXBLBinding.cpp
+++ b/dom/xbl/nsXBLBinding.cpp
@@ -109,16 +109,22 @@ nsXBLJSClass::nsXBLJSClass(const nsAFlatCString& aClassName,
   delProperty = ::JS_DeletePropertyStub;
   setProperty = ::JS_StrictPropertyStub;
   enumerate = XBLEnumerate;
   resolve = JS_ResolveStub;
   convert = ::JS_ConvertStub;
   finalize = XBLFinalize;
 }
 
+bool
+nsXBLJSClass::IsXBLJSClass(const JSClass* aClass)
+{
+  return aClass->finalize == XBLFinalize;
+}
+
 nsrefcnt
 nsXBLJSClass::Destroy()
 {
   NS_ASSERTION(!isInList(),
                "referenced nsXBLJSClass is on LRU list already!?");
 
   if (nsXBLService::gClassTable) {
     nsXBLService::gClassTable->Remove(mKey);
@@ -982,17 +988,17 @@ nsXBLBinding::DoInitJSClass(JSContext *cx,
   }
 
   JS::Rooted<JSObject*> proto(cx);
   JS::Rooted<JS::Value> val(cx);
 
   if (!::JS_LookupPropertyWithFlags(cx, global, className.get(), 0, &val))
     return NS_ERROR_OUT_OF_MEMORY;
 
-  if (val.isObject()) {
+  if (val.isObject() && nsXBLJSClass::IsXBLJSClass(JS_GetClass(&val.toObject()))) {
     *aNew = false;
     proto = &val.toObject();
   } else {
     // We need to initialize the class.
     *aNew = true;
 
     if (!c) {
       c = nsXBLService::getClass(xblKey);